<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AtCoder on biotope monologue</title>
    <link>https://mijinko17.github.io/hoge/tags/atcoder/</link>
    <description>Recent content in AtCoder on biotope monologue</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>jp</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 20 Jan 2020 06:55:14 +0900</lastBuildDate>
    
	<atom:link href="https://mijinko17.github.io/hoge/tags/atcoder/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ABC152</title>
      <link>https://mijinko17.github.io/hoge/posts/abc152/</link>
      <pubDate>Mon, 20 Jan 2020 06:55:14 +0900</pubDate>
      
      <guid>https://mijinko17.github.io/hoge/posts/abc152/</guid>
      <description>94 分 A~E の 5 完でした。
D に 50 分くらい吸われて死にかけましたが何とか E まで解けました。毎度 C、D あたりで引っかかってる気がします。
問題: https://atcoder.jp/contests/abc152/tasks
成績: https://atcoder.jp/users/mijinko/history/share/abc152
A N==Mかを判定すればいいです。
B  string(n,c)で char c を n 個くっつけたものを生成できるので文字列の生成はすぐです。 string に対して不等号を使えば辞書順の判定はできるのでこれで終わりです。  C  「前にある数が全て自分より大きい」ような数の個数を数えればいいです。 これは「前にある数の最小値が自分より大きい」ような数と言い換えられます。 先頭から順に見ていく場合、前にある数の集合は 1 つずつ増えていきます。これに合わせて min を更新していけばいいです。  D  「n 以下の整数で〜」かつ桁に関する情報と来たら桁 dp。当然ですね。 桁 dp あんま書いたことなくて何も分からない…… 桁 dp でググったりしたけど結局どう dp をするのか分からないまま時間が流れます。 とりあえず問題文を読んで求めたいものを整理します。先頭が i、最後尾が j なる数の総数が分かれば良さそうです。これをcount[i][j]という形で持つことにします。 各(i,j)について高速に count を計算できそうです。i が n の最高位より小さかったら〜、等しい時は j が n の一の位より大きかったら〜…… そんな複雑なコードでバグらないわけがありません(破滅)。この時点で 50 分が経過し 3 完を覚悟します。 ここで 1〜n まで全部見て count を完成させる方法が降って来ます。危なかった。整数 k の最高位と最下位はs=to_string(k)としてs[0]、s.</description>
    </item>
    
  </channel>
</rss>