<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>biotope monologue</title>
    <link>https://mijinko17.github.io/hoge/</link>
    <description>Recent content on biotope monologue</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 23 Jan 2020 02:58:44 +0900</lastBuildDate>
    
	<atom:link href="https://mijinko17.github.io/hoge/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Codeforces Round #615</title>
      <link>https://mijinko17.github.io/hoge/posts/codefo_round_615/</link>
      <pubDate>Thu, 23 Jan 2020 02:58:44 +0900</pubDate>
      
      <guid>https://mijinko17.github.io/hoge/posts/codefo_round_615/</guid>
      <description>A 一旦最大のものに合わせる。残ったコインが 3 の倍数なら YES。
B ソートして前から見る。次の目的地が右上になかったら NO
C 素因数が一つの時は指数が 6 以上で OK。2 つ以上の時は適当に素因数 2 つとって a、b に割り当てて c=n/(a*b)とする。
D x で割った余りで分類して、各余りごとに前から詰めるのが最適。各余りについて作られない最小の数を計算して、それらの最小値を計算すれば良い。セグ木でぶん殴って終わり。
E 各列で考える。各回転数についてどのくらい目的の状態と一致するか分かればいい。各$a_{ij}$について何回転すれば最適な位置に移動できるかはすぐわかることを利用すれば$O(n)$で計算できる。ランタイムエラーで通らなくて切れる。
F 無証明だが多分木の直径の両端とあと一つ最適なやつを取ればいい。三つ目をとるときに LCA でぶん殴る。</description>
    </item>
    
    <item>
      <title>ABC152</title>
      <link>https://mijinko17.github.io/hoge/posts/abc152/</link>
      <pubDate>Mon, 20 Jan 2020 06:55:14 +0900</pubDate>
      
      <guid>https://mijinko17.github.io/hoge/posts/abc152/</guid>
      <description>94 分 A~E の 5 完でした。
D に 50 分くらい吸われて死にかけましたが何とか E まで解けました。毎度 C、D あたりで引っかかってる気がします。
問題: https://atcoder.jp/contests/abc152/tasks
成績: https://atcoder.jp/users/mijinko/history/share/abc152
A N==Mかを判定すればいいです。
B  string(n,c)で char c を n 個くっつけたものを生成できるので文字列の生成はすぐです。 string に対して不等号を使えば辞書順の判定はできるのでこれで終わりです。  C  「前にある数が全て自分より大きい」ような数の個数を数えればいいです。 これは「前にある数の最小値が自分より大きい」ような数と言い換えられます。 先頭から順に見ていく場合、前にある数の集合は 1 つずつ増えていきます。これに合わせて min を更新していけばいいです。  D  「n 以下の整数で〜」かつ桁に関する情報と来たら桁 dp。当然ですね。 桁 dp あんま書いたことなくて何も分からない…… 桁 dp でググったりしたけど結局どう dp をするのか分からないまま時間が流れます。 とりあえず問題文を読んで求めたいものを整理します。先頭が i、最後尾が j なる数の総数が分かれば良さそうです。これをcount[i][j]という形で持つことにします。 各(i,j)について高速に count を計算できそうです。i が n の最高位より小さかったら〜、等しい時は j が n の一の位より大きかったら〜…… そんな複雑なコードでバグらないわけがありません(破滅)。この時点で 50 分が経過し 3 完を覚悟します。 ここで 1〜n まで全部見て count を完成させる方法が降って来ます。危なかった。整数 k の最高位と最下位はs=to_string(k)としてs[0]、s.</description>
    </item>
    
    <item>
      <title>Hello, World!</title>
      <link>https://mijinko17.github.io/hoge/posts/first_post/</link>
      <pubDate>Mon, 20 Jan 2020 03:11:20 +0900</pubDate>
      
      <guid>https://mijinko17.github.io/hoge/posts/first_post/</guid>
      <description>このサイトについて   このサイトは mijinko(twitter, atcoder)によって主に競技プログラミング関係の記事を投稿するために作られました。
  コンテスト後によく自分の解法をまとめたツイートをするのですが、この前コンテストに参加できなかった時に他の方の解法ツイートが目障りに感じました(すみませんやたら強い言葉を使ってるのは単純にいい表現が思いつかないだけです……)。コンテスト後の感想戦(?)も競プロの醍醐味ではあるのですが、twitter などの情報の取捨選択をしにくい場所にデカデカと解法を書き連ねるのは少し違うような気がしています。今後は自分の解法はここに投稿するつもりです。
  ページレイアウトは hugo のテンプレートを使って作成し、それを github pages で公開しています。テキストベースのものは極力 github で管理したい思いがあり、それを実現するには github pages が最適だという判断です。ちなみに以前は github pages のリポジトリは公開用とソースコード用で二つ用意したりブランチを不自然に切ったりする必要があったようですが、この記事を書いている現在は以下のように設定することで 1 つのリポジトリで綺麗に完結させることができます。
 github pages の source を master の docs/に指定する。 ./config.toml にpublishDir=&amp;quot;docs&amp;quot;を追加する。これで build 後の生成ファイルが docs/に出力されるようになる。  あと自分がサイトを作る時に悩んだことを書き残しておきます。
 無料アカウントの場合、github pages に使うリポジトリは public である必要があります。 以前は使うリポジトリの名前が固定されていたようですが、現在はどのリポジトリでも pages を使うことができます。    markdown の書き方が分からなすぎて辛いです。今日は結局リンクを別のタブで開くようにできませんでした。あと tex の表示もできるようにしたいですね。
  このページテーマは Hermit という名前で、スタイリッシュで気に入っているのですが、ページの遷移が悪い感があります。一つの記事から他のページへの移動がとても面倒です(一度記事一覧に戻る必要があります)。テーマは気軽に変えられそうなのでもう少し使い勝手のいいものを探していきます。
  </description>
    </item>
    
  </channel>
</rss>